package com.aghacks.hellsbells;


import java.util.ArrayList;
import java.util.Random;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;


public class WhatIsThat extends View {
	boolean created = false;
    public Random generator = new Random();
    Rect clippingRect = new Rect();
	Paint paint = new Paint();
	static Bitmap[] BMPS = new Bitmap[12];
	
	
	//constructors:
	public WhatIsThat(Context context) {
        super(context);
    }
	public WhatIsThat(Context context, AttributeSet set) {
		super(context, set);
		initDrawables();
		setupQuestion();
	}
	
	//initializers:
    public void setupQuestion(){
    	Indexes.add(0);
    	Indexes.add(2);
    	for(int i=0;i<11;i++){
        	Indexes.add(Indexes.get(i+1)*2);
    	}
    }
    
	public void initDrawables(){
		//textures for fields
//		bmp = BitmapFactory.decodeResource(getResources(), R.drawable.);
	}
	
    @Override
	protected void onDraw(Canvas canvas) {
		super.onDraw(canvas);
		canvas.getClipBounds(clippingRect);
		super.onDraw(canvas);
		int WIDTH=100;
		
	}
    @Override
	public boolean onTouchEvent(MotionEvent event) {
		super.onTouchEvent(event);
		float touchX = event.getX();
		float touchY = event.getY();
		
		if(event.getActionMasked() == MotionEvent.ACTION_DOWN){
			if(touchX>0+marginsize && touchX<buttonsize+marginsize && touchY>400){
					updateBoards();
			        Left();
			        updateBoards();
			        if(!areBoardsEqual()){
			        	setAtRandomPosition();
			        	leftMove = true;
			        }
			        else
			        	leftMove = false;
			        postInvalidate();
			        
				}
				else if(touchX>buttonsize+marginsize && touchX<buttonsize*2 + marginsize
						&& touchY>400 && touchY<400+buttonsize){
					updateBoards();
			        Up();
			        updateBoards();
			        if(!areBoardsEqual()){
			        	setAtRandomPosition();
			        	upMove = true;
			        }
			        else
			        	upMove = false;
			        postInvalidate();
				}
				else if(touchX>buttonsize+marginsize && touchX<buttonsize*2+marginsize && touchY>400+buttonsize){
					updateBoards();
			        Down();
			        updateBoards();
			        if(!areBoardsEqual()){
			        	setAtRandomPosition();
			        	downMove = true;
			        }
			        else
			        	downMove = false;
			        postInvalidate();
				}
				else if(touchX>buttonsize*2 +marginsize && touchY>400 ){
					updateBoards();
			        Right();
			        updateBoards();
			        if(!areBoardsEqual()){
			        	setAtRandomPosition();
			        	rightMove = true;
			        }
			        else //areBoardsEqual()==true
			        	rightMove = false;
			        postInvalidate();
				}
				if(BoardFull() && !leftMove && !rightMove && !upMove && !downMove && !WINGAME)
					FAILGAME=true;
				if(isGameFinished()){
					FAILGAME = false;
					WINGAME = true;
				}
		}
		return true;
	}	
}
class Point{
	public float x;
	public float y;
	public Point(){}
	
}